##
##############################################################################
#
# @file       pathaction.py
# @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
# @brief      Implementation of the PathAction object. This file has been
#             automatically generated by the UAVObjectGenerator. For use with
#             the PyMite VM of the FlightPlan module.
#
# @note       Object definition file: pathaction.xml.
#             This is an automatically generated file.
#             DO NOT modify manually.
#
# @see        The GNU Public License (GPL) Version 3
#
#############################################################################/
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

from openpilot.uavtalk.uavobject import *

# Field ModeParameters definition
class ModeParametersField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 4)

# Field ConditionParameters definition
class ConditionParametersField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 4)

# Field JumpDestination definition
class JumpDestinationField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 1, 1)

# Field ErrorDestination definition
class ErrorDestinationField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 1, 1)

# Field Mode definition
class ModeField(UAVObjectField):
    # Enumeration options
    FLYENDPOINT = 0
    FLYVECTOR = 1
    FLYCIRCLERIGHT = 2
    FLYCIRCLELEFT = 3
    DRIVEENDPOINT = 4
    DRIVEVECTOR = 5
    DRIVECIRCLELEFT = 6
    DRIVECIRCLERIGHT = 7
    FIXEDATTITUDE = 8
    SETACCESSORY = 9
    DISARMALARM = 10
    def __init__(self):
    	UAVObjectField.__init__(self, 7, 1)

# Field EndCondition definition
class EndConditionField(UAVObjectField):
    # Enumeration options
    NONE = 0
    TIMEOUT = 1
    DISTANCETOTARGET = 2
    LEGREMAINING = 3
    BELOWERROR = 4
    ABOVEALTITUDE = 5
    ABOVESPEED = 6
    POINTINGTOWARDSNEXT = 7
    PYTHONSCRIPT = 8
    IMMEDIATE = 9
    def __init__(self):
    	UAVObjectField.__init__(self, 7, 1)

# Field Command definition
class CommandField(UAVObjectField):
    # Enumeration options
    ONCONDITIONNEXTWAYPOINT = 0
    ONNOTCONDITIONNEXTWAYPOINT = 1
    ONCONDITIONJUMPWAYPOINT = 2
    ONNOTCONDITIONJUMPWAYPOINT = 3
    IFCONDITIONJUMPWAYPOINTELSENEXTWAYPOINT = 4
    def __init__(self):
    	UAVObjectField.__init__(self, 7, 1)



# Object PathAction definition
class PathAction(UAVObject):
    # Object constants
    OBJID = 611492014

    # Constructor
    def __init__(self):
        UAVObject.__init__(self, PathAction.OBJID)

        # Create object fields
    	self.ModeParameters = ModeParametersField()
    	self.addField(self.ModeParameters)
    	self.ConditionParameters = ConditionParametersField()
    	self.addField(self.ConditionParameters)
    	self.JumpDestination = JumpDestinationField()
    	self.addField(self.JumpDestination)
    	self.ErrorDestination = ErrorDestinationField()
    	self.addField(self.ErrorDestination)
    	self.Mode = ModeField()
    	self.addField(self.Mode)
    	self.EndCondition = EndConditionField()
    	self.addField(self.EndCondition)
    	self.Command = CommandField()
    	self.addField(self.Command)

        # Read field data
        self.read()
        self.metadata.read()
