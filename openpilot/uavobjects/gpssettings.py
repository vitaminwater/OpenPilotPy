##
##############################################################################
#
# @file       gpssettings.py
# @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
# @brief      Implementation of the GPSSettings object. This file has been
#             automatically generated by the UAVObjectGenerator. For use with
#             the PyMite VM of the FlightPlan module.
#
# @note       Object definition file: gpssettings.xml.
#             This is an automatically generated file.
#             DO NOT modify manually.
#
# @see        The GNU Public License (GPL) Version 3
#
#############################################################################/
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

from openpilot.uavtalk.uavobject import *

# Field MaxPDOP definition
class MaxPDOPField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 1)

# Field DataProtocol definition
class DataProtocolField(UAVObjectField):
    # Enumeration options
    NMEA = 0
    UBX = 1
    def __init__(self):
    	UAVObjectField.__init__(self, 7, 1)

# Field MinSatellites definition
class MinSatellitesField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 3, 1)

# Field UbxAutoConfig definition
class UbxAutoConfigField(UAVObjectField):
    # Enumeration options
    DISABLED = 0
    CONFIGURE = 1
    CONFIGUREANDSTORE = 2
    def __init__(self):
    	UAVObjectField.__init__(self, 7, 1)

# Field UbxRate definition
class UbxRateField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 0, 1)

# Field UbxDynamicModel definition
class UbxDynamicModelField(UAVObjectField):
    # Enumeration options
    PORTABLE = 0
    STATIONARY = 1
    PEDESTRIAN = 2
    AUTOMOTIVE = 3
    SEA = 4
    AIRBORNE1G = 5
    AIRBORNE2G = 6
    AIRBORNE4G = 7
    def __init__(self):
    	UAVObjectField.__init__(self, 7, 1)

# Field UbxSBASMode definition
class UbxSBASModeField(UAVObjectField):
    # Enumeration options
    DISABLED = 0
    RANGING = 1
    CORRECTION = 2
    INTEGRITY = 3
    RANGINGCORRECTION = 4
    RANGINGINTEGRITY = 5
    RANGINGCORRECTIONINTEGRITY = 6
    CORRECTIONINTEGRITY = 7
    def __init__(self):
    	UAVObjectField.__init__(self, 7, 1)

# Field UbxSBASChannelsUsed definition
class UbxSBASChannelsUsedField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 3, 1)

# Field UbxSBASSats definition
class UbxSBASSatsField(UAVObjectField):
    # Enumeration options
    AUTOSCAN = 0
    WAAS = 1
    EGNOS = 2
    MSAS = 3
    GAGAN = 4
    SDCM = 5
    def __init__(self):
    	UAVObjectField.__init__(self, 7, 1)



# Object GPSSettings definition
class GPSSettings(UAVObject):
    # Object constants
    OBJID = -589410704

    # Constructor
    def __init__(self):
        UAVObject.__init__(self, GPSSettings.OBJID)

        # Create object fields
    	self.MaxPDOP = MaxPDOPField()
    	self.addField(self.MaxPDOP)
    	self.DataProtocol = DataProtocolField()
    	self.addField(self.DataProtocol)
    	self.MinSatellites = MinSatellitesField()
    	self.addField(self.MinSatellites)
    	self.UbxAutoConfig = UbxAutoConfigField()
    	self.addField(self.UbxAutoConfig)
    	self.UbxRate = UbxRateField()
    	self.addField(self.UbxRate)
    	self.UbxDynamicModel = UbxDynamicModelField()
    	self.addField(self.UbxDynamicModel)
    	self.UbxSBASMode = UbxSBASModeField()
    	self.addField(self.UbxSBASMode)
    	self.UbxSBASChannelsUsed = UbxSBASChannelsUsedField()
    	self.addField(self.UbxSBASChannelsUsed)
    	self.UbxSBASSats = UbxSBASSatsField()
    	self.addField(self.UbxSBASSats)

        # Read field data
        self.read()
        self.metadata.read()
