##
##############################################################################
#
# @file       fixedwingpathfollowersettings.py
# @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
# @brief      Implementation of the FixedWingPathFollowerSettings object. This file has been
#             automatically generated by the UAVObjectGenerator. For use with
#             the PyMite VM of the FlightPlan module.
#
# @note       Object definition file: fixedwingpathfollowersettings.xml.
#             This is an automatically generated file.
#             DO NOT modify manually.
#
# @see        The GNU Public License (GPL) Version 3
#
#############################################################################/
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

from openpilot.uavtalk.uavobject import *

# Field HorizontalVelMax definition
class HorizontalVelMaxField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 1)

# Field HorizontalVelMin definition
class HorizontalVelMinField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 1)

# Field VerticalVelMax definition
class VerticalVelMaxField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 1)

# Field CourseFeedForward definition
class CourseFeedForwardField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 1)

# Field ReverseCourseOverlap definition
class ReverseCourseOverlapField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 1)

# Field HorizontalPosP definition
class HorizontalPosPField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 1)

# Field VerticalPosP definition
class VerticalPosPField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 1)

# Field CoursePI definition
class CoursePIField(UAVObjectField):
    # Array element names
    KP = 0
    KI = 1
    ILIMIT = 2
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 3)

# Field SpeedPI definition
class SpeedPIField(UAVObjectField):
    # Array element names
    KP = 0
    KI = 1
    ILIMIT = 2
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 3)

# Field VerticalToPitchCrossFeed definition
class VerticalToPitchCrossFeedField(UAVObjectField):
    # Array element names
    KP = 0
    MAX = 1
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 2)

# Field AirspeedToPowerCrossFeed definition
class AirspeedToPowerCrossFeedField(UAVObjectField):
    # Array element names
    KP = 0
    MAX = 1
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 2)

# Field PowerPI definition
class PowerPIField(UAVObjectField):
    # Array element names
    KP = 0
    KI = 1
    ILIMIT = 2
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 3)

# Field RollLimit definition
class RollLimitField(UAVObjectField):
    # Array element names
    MIN = 0
    NEUTRAL = 1
    MAX = 2
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 3)

# Field PitchLimit definition
class PitchLimitField(UAVObjectField):
    # Array element names
    MIN = 0
    NEUTRAL = 1
    MAX = 2
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 3)

# Field ThrustLimit definition
class ThrustLimitField(UAVObjectField):
    # Array element names
    MIN = 0
    NEUTRAL = 1
    MAX = 2
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 3)

# Field Safetymargins definition
class SafetymarginsField(UAVObjectField):
    # Array element names
    WIND = 0
    STALLSPEED = 1
    LOWSPEED = 2
    HIGHSPEED = 3
    OVERSPEED = 4
    LOWPOWER = 5
    HIGHPOWER = 6
    PITCHCONTROL = 7
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 8)

# Field UpdatePeriod definition
class UpdatePeriodField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 2, 1)



# Object FixedWingPathFollowerSettings definition
class FixedWingPathFollowerSettings(UAVObject):
    # Object constants
    OBJID = 950897418

    # Constructor
    def __init__(self):
        UAVObject.__init__(self, FixedWingPathFollowerSettings.OBJID)

        # Create object fields
    	self.HorizontalVelMax = HorizontalVelMaxField()
    	self.addField(self.HorizontalVelMax)
    	self.HorizontalVelMin = HorizontalVelMinField()
    	self.addField(self.HorizontalVelMin)
    	self.VerticalVelMax = VerticalVelMaxField()
    	self.addField(self.VerticalVelMax)
    	self.CourseFeedForward = CourseFeedForwardField()
    	self.addField(self.CourseFeedForward)
    	self.ReverseCourseOverlap = ReverseCourseOverlapField()
    	self.addField(self.ReverseCourseOverlap)
    	self.HorizontalPosP = HorizontalPosPField()
    	self.addField(self.HorizontalPosP)
    	self.VerticalPosP = VerticalPosPField()
    	self.addField(self.VerticalPosP)
    	self.CoursePI = CoursePIField()
    	self.addField(self.CoursePI)
    	self.SpeedPI = SpeedPIField()
    	self.addField(self.SpeedPI)
    	self.VerticalToPitchCrossFeed = VerticalToPitchCrossFeedField()
    	self.addField(self.VerticalToPitchCrossFeed)
    	self.AirspeedToPowerCrossFeed = AirspeedToPowerCrossFeedField()
    	self.addField(self.AirspeedToPowerCrossFeed)
    	self.PowerPI = PowerPIField()
    	self.addField(self.PowerPI)
    	self.RollLimit = RollLimitField()
    	self.addField(self.RollLimit)
    	self.PitchLimit = PitchLimitField()
    	self.addField(self.PitchLimit)
    	self.ThrustLimit = ThrustLimitField()
    	self.addField(self.ThrustLimit)
    	self.Safetymargins = SafetymarginsField()
    	self.addField(self.Safetymargins)
    	self.UpdatePeriod = UpdatePeriodField()
    	self.addField(self.UpdatePeriod)

        # Read field data
        self.read()
        self.metadata.read()
