##
##############################################################################
#
# @file       attitudesettings.py
# @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
# @brief      Implementation of the AttitudeSettings object. This file has been
#             automatically generated by the UAVObjectGenerator. For use with
#             the PyMite VM of the FlightPlan module.
#
# @note       Object definition file: attitudesettings.xml.
#             This is an automatically generated file.
#             DO NOT modify manually.
#
# @see        The GNU Public License (GPL) Version 3
#
#############################################################################/
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

from openpilot.uavtalk.uavobject import *

# Field BoardRotation definition
class BoardRotationField(UAVObjectField):
    # Array element names
    ROLL = 0
    PITCH = 1
    YAW = 2
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 3)

# Field BoardLevelTrim definition
class BoardLevelTrimField(UAVObjectField):
    # Array element names
    ROLL = 0
    PITCH = 1
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 2)

# Field AccelKp definition
class AccelKpField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 1)

# Field AccelKi definition
class AccelKiField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 1)

# Field MagKi definition
class MagKiField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 1)

# Field MagKp definition
class MagKpField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 1)

# Field AccelTau definition
class AccelTauField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 1)

# Field YawBiasRate definition
class YawBiasRateField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 1)

# Field ZeroDuringArming definition
class ZeroDuringArmingField(UAVObjectField):
    # Enumeration options
    FALSE = 0
    TRUE = 1
    def __init__(self):
    	UAVObjectField.__init__(self, 7, 1)

# Field BiasCorrectGyro definition
class BiasCorrectGyroField(UAVObjectField):
    # Enumeration options
    FALSE = 0
    TRUE = 1
    def __init__(self):
    	UAVObjectField.__init__(self, 7, 1)

# Field TrimFlight definition
class TrimFlightField(UAVObjectField):
    # Enumeration options
    NORMAL = 0
    START = 1
    LOAD = 2
    def __init__(self):
    	UAVObjectField.__init__(self, 7, 1)



# Object AttitudeSettings definition
class AttitudeSettings(UAVObject):
    # Object constants
    OBJID = 1149850808

    # Constructor
    def __init__(self):
        UAVObject.__init__(self, AttitudeSettings.OBJID)

        # Create object fields
    	self.BoardRotation = BoardRotationField()
    	self.addField(self.BoardRotation)
    	self.BoardLevelTrim = BoardLevelTrimField()
    	self.addField(self.BoardLevelTrim)
    	self.AccelKp = AccelKpField()
    	self.addField(self.AccelKp)
    	self.AccelKi = AccelKiField()
    	self.addField(self.AccelKi)
    	self.MagKi = MagKiField()
    	self.addField(self.MagKi)
    	self.MagKp = MagKpField()
    	self.addField(self.MagKp)
    	self.AccelTau = AccelTauField()
    	self.addField(self.AccelTau)
    	self.YawBiasRate = YawBiasRateField()
    	self.addField(self.YawBiasRate)
    	self.ZeroDuringArming = ZeroDuringArmingField()
    	self.addField(self.ZeroDuringArming)
    	self.BiasCorrectGyro = BiasCorrectGyroField()
    	self.addField(self.BiasCorrectGyro)
    	self.TrimFlight = TrimFlightField()
    	self.addField(self.TrimFlight)

        # Read field data
        self.read()
        self.metadata.read()
