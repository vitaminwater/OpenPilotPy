##
##############################################################################
#
# @file       flightbatterystate.py
# @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
# @brief      Implementation of the FlightBatteryState object. This file has been
#             automatically generated by the UAVObjectGenerator. For use with
#             the PyMite VM of the FlightPlan module.
#
# @note       Object definition file: flightbatterystate.xml.
#             This is an automatically generated file.
#             DO NOT modify manually.
#
# @see        The GNU Public License (GPL) Version 3
#
#############################################################################/
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

from openpilot.uavtalk.uavobject import *

# Field Voltage definition
class VoltageField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 1)

# Field Current definition
class CurrentField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 1)

# Field BoardSupplyVoltage definition
class BoardSupplyVoltageField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 1)

# Field PeakCurrent definition
class PeakCurrentField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 1)

# Field AvgCurrent definition
class AvgCurrentField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 1)

# Field ConsumedEnergy definition
class ConsumedEnergyField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 1)

# Field EstimatedFlightTime definition
class EstimatedFlightTimeField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 6, 1)

# Field NbCells definition
class NbCellsField(UAVObjectField):
    def __init__(self):
    	UAVObjectField.__init__(self, 3, 1)

# Field NbCellsAutodetected definition
class NbCellsAutodetectedField(UAVObjectField):
    # Enumeration options
    FALSE = 0
    TRUE = 1
    def __init__(self):
    	UAVObjectField.__init__(self, 7, 1)



# Object FlightBatteryState definition
class FlightBatteryState(UAVObject):
    # Object constants
    OBJID = 647373650

    # Constructor
    def __init__(self):
        UAVObject.__init__(self, FlightBatteryState.OBJID)

        # Create object fields
    	self.Voltage = VoltageField()
    	self.addField(self.Voltage)
    	self.Current = CurrentField()
    	self.addField(self.Current)
    	self.BoardSupplyVoltage = BoardSupplyVoltageField()
    	self.addField(self.BoardSupplyVoltage)
    	self.PeakCurrent = PeakCurrentField()
    	self.addField(self.PeakCurrent)
    	self.AvgCurrent = AvgCurrentField()
    	self.addField(self.AvgCurrent)
    	self.ConsumedEnergy = ConsumedEnergyField()
    	self.addField(self.ConsumedEnergy)
    	self.EstimatedFlightTime = EstimatedFlightTimeField()
    	self.addField(self.EstimatedFlightTime)
    	self.NbCells = NbCellsField()
    	self.addField(self.NbCells)
    	self.NbCellsAutodetected = NbCellsAutodetectedField()
    	self.addField(self.NbCellsAutodetected)

        # Read field data
        self.read()
        self.metadata.read()
